/** @file main.cpp
 *  @brief
 *
 *  @author Bill Merryman
 *  @bug No known bugs.
 *
 *  Created on: Dec 9, 2019
 *
 */

#include <iostream>
#include <termios.h>
#include <fcntl.h>
#include <unistd.h>

#include <motionManager.hpp>
#include <visionManager.hpp>

int main(int argc, char *argv[]) {

	if(argc < 10)
	{
		fprintf(stderr, "Usage: BioloidBeaglebone MLCaffeNamesFile MLProtoFile MLCaffeFile MLCaffeConfidence MLDarknetNamesFile MLDarknetCfgFile MLDarknetWeightsFile MLDarknetConfidence MLDarknetNMSThreshold");
		return -1;
	}

	int key = 0;

	const char *PRU_0Firmware = argv[1];
	const char *PRU_1Firmware = argv[2];
	const char *motionFile = argv[3];
	const char *caffeNamesFile = argv[4];
	const char *protoFile = argv[5];
	const char *modelFile = argv[6];
	float caffeConfidence = atof(argv[7]);
	const char *darknetNamesFile = argv[8];
	const char *cfgFile = argv[9];
	const char *weightsFile = argv[10];
	float darknetConfidence = atof(argv[11]);
	float darknetNMSThreshold = atof(argv[12]);

	motionManagerInitialize(motionFile);
	visionManagerInitialize(caffeNamesFile,
							protoFile,
							modelFile,
							caffeConfidence,
							darknetNamesFile,
							cfgFile,
							weightsFile,
							darknetConfidence,
							darknetNMSThreshold);

	int usbfd = open("/dev/ttyACM0", O_RDWR| O_NONBLOCK | O_NDELAY);
	switch(fork())
	{
	case 0:
		configurePort(usbfd);
		transferFlashToMotionPage(usbfd, 1);
		executeMotionPage(usbfd, 1);
		break;
	default:
		visionManagerProcess(key);
		break;
	}

//	uint8_t outputBuffer[BUFFER_SIZE];
//	uint8_t readPosition = 0;
//	uint8_t writePosition = 0;
//	uint8_t parameterBuffer[] = { 0x18, 0x01, 0x00, 0x00, 0x00, 0x20, 0x20, 0xFF, 0x00};
//	assemblePacket(outputBuffer, &readPosition, &writePosition, 1, 0x03, parameterBuffer, sizeof(parameterBuffer));
//	write(usbfd, outputBuffer, writePosition);           // send 7 character greeting

}


